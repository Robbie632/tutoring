/* 
Introduction to CSS
===================

CSS is a language for styling HTML elements using the followuing format

css selector {
    property: value
}

for example, ake the following CSS rule ...

.my-card {
    background-color: red;
}

.my-card is the css selector, this specificies what html element to style
background-color is the property, i.e what to change
red is thh value, this sets the style

css selectors
===================
.my-class => css selector for elements with attribute class = my-class

#my-id => css selector for elements with attribute id = my-id

element-name => css selector for elements with the tag name element-name

.my-class, #my-id => applies rules to elements targetted by both selectors

.parent .child => css selector for an element with class 'child' that is a descendant of an element with class 'parent'

.parent > .child => css selector for an element with class 'child' that is a direct child of an element with class 'parent'

.my-class:hover => css selector for an element with class 'my-class' when the user hovers over it

button[type="submit"] => targets a button with attribute type = submit


Properties
===================
These are the style properties that can be changed, examples include color, background-color, height, width, border etc...

Below are a list of properties that I find myself using often and I think you can do a lot with just these, 
details on each property can be found here: https://developer.mozilla.org/en-US/docs/Web/CSS/Properties:

margin - sets the margin (also can be more specific with margin-top, margin-bottom, margin-left, margin-right)
padding - sets the padding (also can be more specific with padding-top, padding-bottom, padding-left, padding-right)
border - set the border ie 1px solid black
border-radius - can make the element more rounded, useful for styling buttons etc.
color - color of the font
background-color - color of the background
font-size - size of the font
font-style - italic, bold etc
display - controls layout i.e inline, block, flex
height 
width
text-align how text should be aligned i.e over to the left, to the right or center
font-family - this is a sequence of fonts that are attempted to be used by the browser, it tries to use the first and if it fails it uses the second and so on

The following properties are only used on an element when display: flex is set
    justify-content
    align-items
    gap


Values
===================
These are the possible values that the properties can be styled with, acceptable values depend on the property but examples include 100px, red, justify-content.


custom properties
===================
--my-var: css value ie '10px' or red etc
background-color: var(--my-var) sets background color property to value of my-varr


Box Model
===================
Every element is a rectangular box. The box model defines how an element's content, 
padding, border, and margin are rendered. The content is the innermost part, surrounded 
by padding, which is a transparent area that creates space between the content and the border. 
The border wraps the padding and content, and finally, the margin is the transparent outer layer 
that creates space between the element and other elements. The box-sizing property, when set to 
border-box, changes the default behavior, making the width and height properties include the 
padding and border, simplifying layout calculations.

[recommended] box-sizing: border-box => width = content + padding + border
[default]     box-sizing: content-box => width = content

*/

* {
    box-sizing: border-box;
}
:root{
    --background-color:white;
    --font-color: rgb(35, 33, 33);
    --border-color: rgb(75, 67, 67);
    --color-1: rgb(190, 219, 248);
    --color-2: rgb(87, 112, 224);
    --input-background:rgb(233, 233, 239);
    --button-font-color: white;
    
}

.dark-mode {
    --background-color: rgb(35, 33, 33);
    --font-color: white; 
    --border-color: rgb(138, 125, 125);
    --color-1: rgb(69, 94, 120);

    --input-background:rgb(70, 70, 80);
}
h1 {
    text-align: center;
    margin-top:6rem;
    margin-bottom: 3rem;
}
h2 {
    margin-bottom: 2rem;
    margin-top: 4rem;
    text-align: left;
}
body {
    background-color: var(--background-color);
    color: var(--font-color);
    transition: background-color 0.3s ease;
    margin: 0;
    padding: 0;
}
header {
    background-color: var(--color-1);
    padding: 1.5rem;
    padding-left: 3rem;
    padding-right: 3rem;

}
footer {
    padding-top:100px;
    padding-bottom: 20px;
    background-color: var(--color-1);
    margin-top:100px;
}

main {
    margin-left:100px;
    margin-right: 100px;
}

nav {
    display: flex;
    flex-direction: row;
}
header nav {
    justify-content: end;
    gap:2rem;
    font-size: 1.5rem;  
}
footer nav {
    justify-content: center;
    gap:2.5rem;
    font-size: 1rem;  
}
nav > a {
    color: var(--font-color);
    text-decoration: none;
}
nav > a:hover {
    color:rgb(143, 145, 169);
}
.card-container {
    display: flex;
    flex-wrap: wrap;
    gap:3rem;
    width:100%;
    justify-content: center;
}
.card-container > div {
    width:400px;
    height: 300px;
    border: 1px solid var(--border-color);
    border-radius: 10px;
    display: flex;
    flex-direction: column;
    align-items: center;
}
.card-container > div.skill {
    height:100px;
}
.center-block{
display: flex;
flex-direction: column;
align-items: center;
width:100%;
}
form {
    display: flex;
    flex-direction: column;
    gap:2rem;
    width: 600px;
}
.label-input {
    display: flex;
    flex-direction: column;
    width: 100%;
    gap:1rem;
}
form input, form textarea {
    background-color: var(--input-background);
    color:var(--font-color);
    border-radius: 5px;
}
form input {
    height: 2rem;

}

textarea {
  height: 150px;  /* Sets a fixed height of 150 pixels */
}


input[type="submit"] {
    background-color: var(--color-2);
    color: var(--button-font-color);
    height:2.2rem;
    border-radius: 10px;
    width: 25%;
}

input[type="submit"]:hover {
    cursor: pointer;
}



/* Below not relevant to lesson */

.dark-mode-buttons {
    position: absolute;
    right: 0px;
    top:0px;
    padding:20px;
}

#dark-mode-button {
    width:70px;
}
#dark-mode-button:hover{
    cursor: pointer;
}

input[type="range"]::-webkit-slider-runnable-track {
  background: grey;
  border-radius: 10px; /* Sets the track color */
}
